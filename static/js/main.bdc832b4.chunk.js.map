{"version":3,"sources":["images/a1-4.png","images/a1-1.png","images/a1-2.png","images/a1-3.png","images/a1-5.png","images/a1-10.png","components/Home.js","components/assignments/assignment1.js","components/assignments/assignment2/Card.js","components/assignments/assignment2/Assignment2.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","state","style","margin","to","Component","Assignment1","styles","maxWidth","textAlign","padding","src","require","Card","props","this","suit","id","value","image","color","class","className","ShuffleDeck","handlePlayers","event","setState","players","target","handleSubmit","e","preventDefault","shuffledDeck","Array","from","deck","dealtCards","dealCards","playHands","count","length","i","card","getCard","undefined","push","document","getElementById","reset","a_deck","pop","farroShuffle","len","half1","slice","half2","playDeck","firstLastShuffle","shuffled","displayDeck","data","myDeck","map","key","playerCards","player","playerHand","playerBox","parseInt","pcards","onSubmit","onChange","type","pattern","name","required","onClick","App","basename","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bdc832b4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/a1-4.2b8dfe62.png\";","module.exports = __webpack_public_path__ + \"static/media/a1-1.4f11b882.png\";","module.exports = __webpack_public_path__ + \"static/media/a1-2.7d4a27ed.png\";","module.exports = __webpack_public_path__ + \"static/media/a1-3.1eb021bd.png\";","module.exports = __webpack_public_path__ + \"static/media/a1-5.7eae352c.png\";","module.exports = __webpack_public_path__ + \"static/media/a1-10.b5ddef3a.png\";","import React, { Component } from 'react';\nimport { HashLink as Link } from \"react-router-hash-link\";\n\nclass Home extends Component {\n    state = {}\n    render() {\n        return (\n            <div>\n                <h1>MEDP 341</h1>\n                <div style={{ margin: \"10%\" }}>\n                    <h2>Assignments</h2>\n                    <Link to=\"/assignment1\"><li>Assignment 1</li></Link>\n                    <Link to=\"/assignment2\"><li>Assignment 2</li></Link>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\nclass Assignment1 extends Component {\n    state = {}\n\n    render() {\n        let styles = {\n            maxWidth: \"700px\",\n        }\n        return (\n            <div>\n                <h1>Assignment 1</h1>\n\n                <h2 style={{ margin: \"50px\", textAlign: \"left\" }}>Reading Response</h2>\n                <p style={{ margin: \"50px\", textAlign: \"left\" }}>\n                    Laurel Schwulst talks about how important it is for the web to be free and should be an outlet for individuals to express themselves in \"my website is a shifting house next to a river of knowledge\". She talks anout how important it tis for the people to take back the web from big, self serving corporations that have practically taken over the web. I find that I sympathize with these ideas. I always admired the artistic and freeform quality of the web. It is such an important platform that can be shaped and painted to reflect any person. Furthermore, I really like how the author likens the creation of a website to that of a room, or plant or a shelf. Personally, I think when I make a website, it is a combination of building it as a \"puddle\" and as a \"room\". I often find myself creating websites in large bursts of inspiration, rather than, periodic, constant change like a puddle. I also tend to rearrange my website like I would rearrange my room. moving large parts of it around until I find some harmony in its combinations. I had never given much thought to these varying approaches of making a website before, and I realize how different minds can work.\n                </p>\n                <p style={{ margin: \"50px\", textAlign: \"left\" }}>\n                    The second article, in shocking contrast to the first, focuses on some of the oldest, most static but best practices of web design. We can see the skeleton of most old wesbites, and they look like copies of eachother with various texts. However, these not so amazing websites are the building blocks of the web; The core of a good and sound website before all of its added embellishments. The authors emphasis of these less flashy but critical web design practices surely made me question my own lacking form. I tend to jump to the fun and colorful aspects of the website, thinking to leave the smaller html design practices for last, or considering them optional. However while the website mahy appear nice, on the inside, it is susceptible ti breaking and would result in future problems.\n\n                </p>\n                <p style={{ margin: \"50px\", textAlign: \"left\" }}> The Jodi website at first glance is what I would consider web art. I really love seeing the web utilized it creative ways, and this website did that. Every link I clicked showed me something unexpected, and it had a way of drawing me in, even though I could not understand it. The use of colors, characters, animation and images, strewn together in a clever way makes traversing through the website a fun and exciting journey.</p>\n                <h2 style={{ margin: \"50px\", textAlign: \"left\" }}>Inspector Tools practice</h2>\n                <p style={{ margin: \"50px\", textAlign: \"left\" }}>\n                    Using the inspector tools I was able to make various changes on youtube.com. I tried both directly editing the text and findinf divs to reference to from the source code, using javascript to make queries to change things like background color, and using the area with the styles description to update styling for icon colors and font. In summary, I have changed font family/sizing/colors, background and icon colors, added borders and played with padding through a variety of means using the inspector tools.\n                </p>\n                <div style={{ padding: \"50px\" }}>\n                    <img style={styles} src={require(\"../../images/a1-4.png\")}></img>\n                    <img style={styles} src={require(\"../../images/a1-1.png\")}></img>\n                    <img style={styles} src={require(\"../../images/a1-2.png\")}></img>\n                    <img style={styles} src={require(\"../../images/a1-3.png\")}></img>\n\n                </div>\n\n                <p style={{ margin: \"50px\", textAlign: \"left\" }}>\n                    Over here, I also worked on editing w3 schools wesbite. I added in background images, changed buttons to have rounded corners, and changed the colors and bacgrounds and outlines associated with the tables only.\n                </p>\n                <div style={{ padding: \"50px\" }}>\n                    <img style={styles} src={require(\"../../images/a1-5.png\")}></img>\n                    <img style={styles} src={require(\"../../images/a1-10.png\")}></img>\n\n                </div>\n            </div>);\n    }\n}\n\nexport default Assignment1;","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./card.css\";\n\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { id, suit, value, color, image } = this.props;\n\n    return (\n      <div class=\"cardbox\">\n        <img src={image} className=\"card-image\" />\n        <div className=\"card-text\">\n          <h3>{suit}</h3>\n          <h3>{value}</h3>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport data from \"./cards.json\";\nimport Card from \"./Card\";\n\nclass ShuffleDeck extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      deck: [],\n      shuffledDeck: [],\n      players: 1,\n      dealtCards: {},\n      displayDeck: []\n    };\n  }\n\n  componentDidMount() {\n    let deck = Array.from(data);\n    this.setState({ deck, shuffledDeck: deck });\n  }\n\n  handlePlayers = event => {\n    this.setState({\n      players: event.target.value > 10 ? 10 : event.target.value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.setState(\n      {\n        shuffledDeck: Array.from(this.state.deck),\n        dealtCards: {}\n      },\n      () => {\n        this.dealCards();\n      }\n    );\n  };\n\n  dealCards = () => {\n    const { players, shuffledDeck } = this.state;\n    let playHands = {};\n    let count = 0;\n    while (count < 5 && shuffledDeck.length > players) {\n      for (let i = 0; i < players; i++) {\n        let card = this.getCard();\n        playHands[i] === undefined\n          ? (playHands[i] = [card])\n          : playHands[i].push(card);\n      }\n      count++;\n    }\n    this.setState({ dealtCards: playHands });\n    document.getElementById(\"player_amount_field\").reset();\n  };\n\n  getCard = () => {\n    let a_deck = this.state.shuffledDeck;\n    let card = a_deck.pop();\n    this.setState({ shuffledDeck: a_deck });\n    // debugger;\n    return card;\n  };\n\n  farroShuffle = () => {\n    const { shuffledDeck } = this.state;\n    let len = shuffledDeck.length;\n    let half1 = shuffledDeck.slice(0, len / 2) || [];\n    let half2 = shuffledDeck.slice(len / 2, len) || [];\n    let playDeck = [];\n    for (let i = 0; i < half1.length; i++) {\n      playDeck.push(half1[i]);\n      playDeck.push(half2[i]);\n    }\n    this.setState({ shuffledDeck: playDeck });\n  };\n\n  firstLastShuffle = () => {\n    const { shuffledDeck } = this.state;\n    let len = shuffledDeck.length;\n    let shuffled = [];\n    for (let i = 0; i < len / 2; i++) {\n      shuffledDeck[len - i - 1] && shuffled.push(shuffledDeck[len - i - 1]);\n      shuffled.push(shuffledDeck[i]);\n    }\n    this.setState({ shuffledDeck: shuffled });\n  };\n\n  reset = () => {\n    this.setState({\n      shuffledDeck: Array.from(this.state.deck),\n      dealtCards: {},\n      players: 1\n    });\n    document.getElementById(\"player_amount_field\").reset();\n  };\n  render() {\n    let myDeck = this.state.shuffledDeck.map(card => (\n      <div key={card.suit[0] + card.value}>\n        <Card\n          suit={card.suit}\n          value={card.value}\n          id={card.suit[0] + card.value}\n        />\n      </div>\n    ));\n\n    let playerCards = [];\n    const { dealtCards } = this.state;\n    for (let player in dealtCards) {\n      const playerHand = dealtCards[player].map(card => (\n        <div key={card.suit[0] + card.value}>\n          <Card\n            suit={card.suit}\n            value={card.value}\n            id={card.suit[0] + card.value}\n          />\n        </div>\n      ));\n      const playerBox = (\n        <div>\n          <h1>Player {parseInt(player) + 1}</h1>\n          <div className=\"card-container\">{playerHand}</div>\n        </div>\n      );\n      playerCards.push(playerBox);\n    }\n    const pcards =\n      this.state.players && playerCards.length ? (\n        <div>\n          <div>\n            <h1>Cards for {this.state.players} players:</h1>\n            {playerCards}\n          </div>\n        </div>\n      ) : (\n        <div></div>\n      );\n    return (\n      <div>\n        <h1>Shuffle Deck Assignment</h1>\n\n        <form onSubmit={this.handleSubmit} id=\"player_amount_field\">\n          <label>\n            Number of Players:\n            <input\n              onChange={this.handlePlayers}\n              type=\"text\"\n              pattern=\"[0-9]*\"\n              name=\"player_amount\"\n              required\n            />\n          </label>\n          <input type=\"submit\" value=\"Deal Cards\" />\n        </form>\n        <br />\n        <button onClick={this.farroShuffle}>Farro Shuffle</button>\n        <button onClick={this.firstLastShuffle}>Other shuffle</button>\n        <button onClick={this.reset}>Reset</button>\n        {pcards}\n\n        <h1>THE DECK OF CARDS</h1>\n        <h2>{myDeck.length} cards</h2>\n        <div className=\"card-container-outer\">\n          <div className=\"card-container\">{myDeck}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ShuffleDeck;\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, withRouter } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Assignment1 from \"./components/assignments/assignment1\";\nimport ShuffleDeck from \"./components/assignments/assignment2/Assignment2\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router basename=\"/\">\n          {/* <Navbar /> */}\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/assignment1\" component={Assignment1} />\n          <Route exact path=\"/assignment2\" component={ShuffleDeck} />\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}