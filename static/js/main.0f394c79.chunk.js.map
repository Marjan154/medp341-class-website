{"version":3,"sources":["images/a1-4.png","images/a1-1.png","images/a1-2.png","images/a1-3.png","images/a1-5.png","images/a1-10.png","components/Home.js","components/assignments/assignment1.js","components/assignments/assignment3.js","components/assignments/assignment2/Card.js","components/assignments/assignment2/Assignment2.js","components/blogs.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","state","style","margin","to","Component","Assignment1","styles","maxWidth","textAlign","padding","src","require","config","gifHoroscopeAPI","props","getHoroscope","a","horoscope","setState","split","console","log","getGifs","gifs","map","hor","h","includes","replace","axios","get","process","gif","data","images","original","url","this","Promise","all","then","gifHoroscopes","sign","horosocope","gifContainer","display","flexFlow","justifyContent","gifContainerOuter","onSubmit","e","preventDefault","target","value","type","className","name","onChange","inputHandler","Card","suit","id","image","color","class","ShuffleDeck","handlePlayers","event","players","handleSubmit","shuffledDeck","Array","from","deck","dealtCards","dealCards","playHands","count","length","i","card","getCard","undefined","push","document","getElementById","reset","a_deck","pop","farroShuffle","len","half1","slice","half2","playDeck","firstLastShuffle","shuffled","displayDeck","myDeck","key","playerCards","player","playerHand","playerBox","parseInt","pcards","pattern","required","onClick","Blogs","fontSize","App","basename","exact","path","component","Assignment3","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0f394c79.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/a1-4.2b8dfe62.png\";","module.exports = __webpack_public_path__ + \"static/media/a1-1.4f11b882.png\";","module.exports = __webpack_public_path__ + \"static/media/a1-2.7d4a27ed.png\";","module.exports = __webpack_public_path__ + \"static/media/a1-3.1eb021bd.png\";","module.exports = __webpack_public_path__ + \"static/media/a1-5.7eae352c.png\";","module.exports = __webpack_public_path__ + \"static/media/a1-10.b5ddef3a.png\";","import React, { Component } from \"react\";\nimport { HashLink as Link } from \"react-router-hash-link\";\n\nclass Home extends Component {\n  state = {};\n  render() {\n    return (\n      <div>\n        <h1>MEDP 341</h1>\n        <div style={{ margin: \"10%\" }}>\n          <h2>Assignments</h2>\n          <Link to=\"/blogs\">\n            <li>Blogs</li>\n          </Link>\n          <Link to=\"/assignment1\">\n            <li>Assignment 1</li>\n          </Link>\n          <Link to=\"/assignment2\">\n            <li>Assignment 2</li>\n          </Link>\n          <Link to=\"/assignment3\">\n            <li>Assignment 3</li>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nclass Assignment1 extends Component {\n    state = {}\n\n    render() {\n        let styles = {\n            maxWidth: \"700px\",\n        }\n        return (\n            <div>\n                <h1>Assignment 1</h1>\n\n                <h2 style={{ margin: \"50px\", textAlign: \"left\" }}>Reading Response</h2>\n                <p style={{ margin: \"50px\", textAlign: \"left\" }}>\n                    Laurel Schwulst talks about how important it is for the web to be free and should be an outlet for individuals to express themselves in \"my website is a shifting house next to a river of knowledge\". She talks anout how important it tis for the people to take back the web from big, self serving corporations that have practically taken over the web. I find that I sympathize with these ideas. I always admired the artistic and freeform quality of the web. It is such an important platform that can be shaped and painted to reflect any person. Furthermore, I really like how the author likens the creation of a website to that of a room, or plant or a shelf. Personally, I think when I make a website, it is a combination of building it as a \"puddle\" and as a \"room\". I often find myself creating websites in large bursts of inspiration, rather than, periodic, constant change like a puddle. I also tend to rearrange my website like I would rearrange my room. moving large parts of it around until I find some harmony in its combinations. I had never given much thought to these varying approaches of making a website before, and I realize how different minds can work.\n                </p>\n                <p style={{ margin: \"50px\", textAlign: \"left\" }}>\n                    The second article, in shocking contrast to the first, focuses on some of the oldest, most static but best practices of web design. We can see the skeleton of most old wesbites, and they look like copies of eachother with various texts. However, these not so amazing websites are the building blocks of the web; The core of a good and sound website before all of its added embellishments. The authors emphasis of these less flashy but critical web design practices surely made me question my own lacking form. I tend to jump to the fun and colorful aspects of the website, thinking to leave the smaller html design practices for last, or considering them optional. However while the website mahy appear nice, on the inside, it is susceptible ti breaking and would result in future problems.\n\n                </p>\n                <p style={{ margin: \"50px\", textAlign: \"left\" }}> The Jodi website at first glance is what I would consider web art. I really love seeing the web utilized it creative ways, and this website did that. Every link I clicked showed me something unexpected, and it had a way of drawing me in, even though I could not understand it. The use of colors, characters, animation and images, strewn together in a clever way makes traversing through the website a fun and exciting journey.</p>\n                <h2 style={{ margin: \"50px\", textAlign: \"left\" }}>Inspector Tools practice</h2>\n                <p style={{ margin: \"50px\", textAlign: \"left\" }}>\n                    Using the inspector tools I was able to make various changes on youtube.com. I tried both directly editing the text and findinf divs to reference to from the source code, using javascript to make queries to change things like background color, and using the area with the styles description to update styling for icon colors and font. In summary, I have changed font family/sizing/colors, background and icon colors, added borders and played with padding through a variety of means using the inspector tools.\n                </p>\n                <div style={{ padding: \"50px\" }}>\n                    <img style={styles} src={require(\"../../images/a1-4.png\")}></img>\n                    <img style={styles} src={require(\"../../images/a1-1.png\")}></img>\n                    <img style={styles} src={require(\"../../images/a1-2.png\")}></img>\n                    <img style={styles} src={require(\"../../images/a1-3.png\")}></img>\n\n                </div>\n\n                <p style={{ margin: \"50px\", textAlign: \"left\" }}>\n                    Over here, I also worked on editing w3 schools wesbite. I added in background images, changed buttons to have rounded corners, and changed the colors and bacgrounds and outlines associated with the tables only.\n                </p>\n                <div style={{ padding: \"50px\" }}>\n                    <img style={styles} src={require(\"../../images/a1-5.png\")}></img>\n                    <img style={styles} src={require(\"../../images/a1-10.png\")}></img>\n\n                </div>\n            </div>);\n    }\n}\n\nexport default Assignment1;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nrequire(\"dotenv\").config();\nconst gkey = process.env.REACT_APP_GIF_API_KEY;\nclass gifHoroscopeAPI extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sign: \"virgo\",\n      horosocope: [],\n      gifHoroscopes: []\n    };\n    this.gifContainer = {\n      display: \"flex\",\n      flexFlow: \"row wrap\",\n      justifyContent: \"center\",\n      textAlign: \"center\"\n    };\n\n    this.gifContainerOuter = {\n      display: \"flex\",\n      padding: \"25px\"\n    };\n  }\n\n  // Make api call with input horoscope sign and store horoscope sentences in state. Get gifs after settign state.\n  getHoroscope = async () => {\n    // This api gives 500 internal server error when you make a request. Tried to debug, couldn't figure it out\n\n    // const { sign } = this.state;\n    // axios\n    //   .get(\n    //   `https://cors-anywhere.herokuapp.com/https://horoscope-free-api.herokuapp.com/?time=today&sign=cancer`, { headers: {\"Access-Control-Allow-Headers\", \"x-requested-with, x-requested-by\"} }\n    //   )\n    //   .then(data => console.log(\"data\", data));\n\n    // instead uses a static string :(\n    const horoscope =\n      \"Setting unrealistic targets would come in the way of assessing your progress. It is important for you to empower yourself with new technical skills to enhance your career prospects. Shared activities will offer you more pleasure. Sudden romantic encounter might confuse you. You will attain a bloom in health on sharing happiness with others. Your Lucky Color is Purple. Your Lucky number is 11.\";\n\n    this.setState({ horoscope: horoscope.split(\".\") }, async () => {\n      console.log(horoscope.split(\".\"));\n      await this.getGifs();\n    });\n  };\n  // use giphy api to get gifs for each horoscope sentence\n  getGifs = async () => {\n    let gifs = this.state.horoscope.map(async hor => {\n      // truncate \"Your lucky is... to prevent duplicate gifs\"\n      const h = hor.includes(\"Your Lucky Color is\")\n        ? hor.replace(\"Your Lucky Color is \", \"\")\n        : hor.replace(\"Your Lucky number is \", \"\");\n      let gif = await axios.get(\n        `https://api.giphy.com/v1/gifs/search?q=${h}&limit=1&api_key=${gkey}`\n      );\n      return (\n        <div style={{ margin: \"10px\" }}>\n          <h4>{hor}. </h4>\n          {gif.data.data[0] && (\n            <img src={gif.data.data[0].images.original.url}></img>\n          )}\n        </div>\n      );\n    });\n    // resolve all promises from gif async calls and then store in state\n    await Promise.all(gifs).then(gifs =>\n      this.setState({ gifHoroscopes: gifs })\n    );\n  };\n  render() {\n    return (\n      <div>\n        <h1>Gif Horoscope</h1>\n        <form\n          onSubmit={e => {\n            e.preventDefault();\n            this.setState({ sign: e.target.sign.value }, () =>\n              this.getHoroscope()\n            );\n          }}\n        >\n          Enter your horoscope sign:\n          <input\n            type=\"text\"\n            className=\"form-control form-control-lg\"\n            name={\"sign\"}\n            onChange={this.inputHandler}\n          />\n          <button>Submit</button>\n        </form>\n        <div style={this.gifContainer}>{this.state.gifHoroscopes}</div>\n      </div>\n    );\n  }\n}\n\nexport default gifHoroscopeAPI;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./card.css\";\n\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { id, suit, value, color, image } = this.props;\n\n    return (\n      <div class=\"cardbox\">\n        <img src={image} className=\"card-image\" />\n        <div className=\"card-text\">\n          <h3>{suit}</h3>\n          <h3>{value}</h3>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport data from \"./cards.json\"; // data from online card json\nimport Card from \"./Card\";\n\nclass ShuffleDeck extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      deck: [],\n      shuffledDeck: [],\n      players: 1,\n      dealtCards: {},\n      displayDeck: []\n    };\n  }\n\n  componentDidMount() {\n    // Make deep copy of array so cards dont delete after popping.\n    let deck = Array.from(data);\n    this.setState({ deck, shuffledDeck: deck });\n  }\n\n  // store input player value with a max of 10 players\n  handlePlayers = event => {\n    this.setState({\n      players: event.target.value > 10 ? 10 : event.target.value\n    });\n  };\n\n  // submit form, retrieve players and start dealing\n  handleSubmit = e => {\n    e.preventDefault();\n    // reset deck with fresh deck and empty all players hands\n    this.setState(\n      {\n        shuffledDeck: Array.from(this.state.deck),\n        dealtCards: {}\n      },\n      () => {\n        this.dealCards();\n      }\n    );\n  };\n\n  // deal 5 cards to each player, one by one\n  dealCards = () => {\n    const { players, shuffledDeck } = this.state;\n    let playHands = {};\n    let count = 0;\n    while (count < 5 && shuffledDeck.length > players) {\n      for (let i = 0; i < players; i++) {\n        let card = this.getCard();\n        playHands[i] === undefined\n          ? (playHands[i] = [card])\n          : playHands[i].push(card);\n      }\n      count++;\n    }\n    this.setState({ dealtCards: playHands });\n    // resets player input\n    document.getElementById(\"player_amount_field\").reset();\n  };\n\n  // pop a card from shuffled deck\n  getCard = () => {\n    let a_deck = this.state.shuffledDeck;\n    let card = a_deck.pop();\n    this.setState({ shuffledDeck: a_deck });\n    // debugger;\n    return card;\n  };\n\n  // farro suffle\n  farroShuffle = () => {\n    const { shuffledDeck } = this.state;\n    let len = shuffledDeck.length;\n    let half1 = shuffledDeck.slice(0, len / 2) || [];\n    let half2 = shuffledDeck.slice(len / 2, len) || [];\n    let playDeck = [];\n    for (let i = 0; i < half1.length; i++) {\n      playDeck.push(half1[i]);\n      playDeck.push(half2[i]);\n    }\n    this.setState({ shuffledDeck: playDeck });\n  };\n\n  // shuffle that just swaps first and last cards\n  firstLastShuffle = () => {\n    const { shuffledDeck } = this.state;\n    let len = shuffledDeck.length;\n    let shuffled = [];\n    for (let i = 0; i < len / 2; i++) {\n      shuffledDeck[len - i - 1] && shuffled.push(shuffledDeck[len - i - 1]);\n      shuffled.push(shuffledDeck[i]);\n    }\n    this.setState({ shuffledDeck: shuffled });\n  };\n\n  // resets deck of cards, players and dealtcards\n  reset = () => {\n    this.setState({\n      shuffledDeck: Array.from(this.state.deck),\n      dealtCards: {},\n      players: 1\n    });\n    document.getElementById(\"player_amount_field\").reset();\n  };\n  render() {\n    // playing deck to render\n    let myDeck = this.state.shuffledDeck.map(card => (\n      <div key={card.suit[0] + card.value}>\n        <Card\n          suit={card.suit}\n          value={card.value}\n          id={card.suit[0] + card.value}\n        />\n      </div>\n    ));\n\n    // each players hand object to render\n    let playerCards = [];\n    const { dealtCards } = this.state;\n    for (let player in dealtCards) {\n      const playerHand = dealtCards[player].map(card => (\n        <div key={card.suit[0] + card.value}>\n          <Card\n            suit={card.suit}\n            value={card.value}\n            id={card.suit[0] + card.value}\n          />\n        </div>\n      ));\n      const playerBox = (\n        <div>\n          <h1>Player {parseInt(player) + 1}</h1>\n          <div className=\"card-container\">{playerHand}</div>\n        </div>\n      );\n      playerCards.push(playerBox);\n    }\n\n    // only display if there are players and hands\n    const pcards =\n      this.state.players && playerCards.length ? (\n        <div>\n          <div>\n            <h1>Cards for {this.state.players} players:</h1>\n            {playerCards}\n          </div>\n        </div>\n      ) : (\n        <div></div>\n      );\n    return (\n      <div>\n        <h1>Shuffle Deck Assignment</h1>\n\n        <form onSubmit={this.handleSubmit} id=\"player_amount_field\">\n          <label>\n            Number of Players:\n            <input\n              onChange={this.handlePlayers}\n              type=\"text\"\n              pattern=\"[0-9]*\"\n              name=\"player_amount\"\n              required\n            />\n          </label>\n          <input type=\"submit\" value=\"Deal Cards\" />\n        </form>\n        <br />\n        <button onClick={this.farroShuffle}>Farro Shuffle</button>\n        <button onClick={this.firstLastShuffle}>Other shuffle</button>\n        <button onClick={this.reset}>Reset</button>\n        {pcards}\n\n        <h1>THE DECK OF CARDS</h1>\n        <h2>{myDeck.length} cards</h2>\n        <div className=\"card-container-outer\">\n          <div className=\"card-container\">{myDeck}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ShuffleDeck;\n","import React, { Component } from \"react\";\nclass Blogs extends Component {\n  state = {};\n  render() {\n    return (\n      <div>\n        <h1>Blogs</h1>\n\n        <h2 style={{ margin: \"50px\", textAlign: \"left\" }}>Assignment1</h2>\n        <p style={{ margin: \"50px\", textAlign: \"left\", fontSize: \"20px\" }}>\n          Laurel Schwulst talks about how important it is for the web to be free\n          and should be an outlet for individuals to express themselves in \"my\n          website is a shifting house next to a river of knowledge\". She talks\n          anout how important it tis for the people to take back the web from\n          big, self serving corporations that have practically taken over the\n          web. I find that I sympathize with these ideas. I always admired the\n          artistic and freeform quality of the web. It is such an important\n          platform that can be shaped and painted to reflect any person.\n          Furthermore, I really like how the author likens the creation of a\n          website to that of a room, or plant or a shelf. Personally, I think\n          when I make a website, it is a combination of building it as a\n          \"puddle\" and as a \"room\". I often find myself creating websites in\n          large bursts of inspiration, rather than, periodic, constant change\n          like a puddle. I also tend to rearrange my website like I would\n          rearrange my room. moving large parts of it around until I find some\n          harmony in its combinations. I had never given much thought to these\n          varying approaches of making a website before, and I realize how\n          different minds can work.\n        </p>\n        <p style={{ margin: \"50px\", textAlign: \"left\", fontSize: \"20px\" }}>\n          The second article, in shocking contrast to the first, focuses on some\n          of the oldest, most static but best practices of web design. We can\n          see the skeleton of most old wesbites, and they look like copies of\n          eachother with various texts. However, these not so amazing websites\n          are the building blocks of the web; The core of a good and sound\n          website before all of its added embellishments. The authors emphasis\n          of these less flashy but critical web design practices surely made me\n          question my own lacking form. I tend to jump to the fun and colorful\n          aspects of the website, thinking to leave the smaller html design\n          practices for last, or considering them optional. However while the\n          website mahy appear nice, on the inside, it is susceptible ti breaking\n          and would result in future problems.\n        </p>\n\n        <h3 style={{ margin: \"50px\", textAlign: \"left\" }}>\n          Everest Pipkin, It was raining in the data center\n        </h3>\n        <p style={{ margin: \"50px\", textAlign: \"left\", fontSize: \"20px\" }}>\n          The cloud has always boggled my mind. The tech industry spends\n          thousands and enlists thousands of people to work on the “cloud”, and\n          so many of them are excited about it, but I just could not fathom it.\n          This article has a darker twist on the cloud I had not considered.\n          Most technology like the internet, was built for war purposes, and so\n          this technology can very possibly be adjusted to use as a weapon.\n          Considering this, it is not at all crazy to think that the cloud is a\n          result of a more belligerent purpose. I would say this article kind of\n          rained on my parade, as I used to look at new technologies and ideas\n          with excitement and possibility, but now I might have to look at it\n          through a more critical lens.\n        </p>\n\n        <h3 style={{ margin: \"50px\", textAlign: \"left\" }}>\n          Julian Oliver, Stealth Infrastructure\n        </h3>\n        <p style={{ margin: \"50px\", textAlign: \"left\", fontSize: \"20px\" }}>\n          This reading was interesting as I had never really given much thought\n          to cell phone towers before. Even if I had, I don’t think I would\n          really be thinking about the dangers of cellphone towers or cell\n          phones. Seeing stories of people, for example, the guy who accused\n          Motorola of giving him a tumor, was surprising. My phone has always\n          been something I keep close to my heart, and like a mother, I refuse\n          to imagine it could hurt ever hurt me. Sure there was that debaccle a\n          few years ago with Samsung Galaxy Note’s exploding, but it was a risk\n          I was willing to take. I think, regardless of all the fears people\n          have of their privacy being invaded, or the potential dangers of radio\n          signals and whatnot, people will still use phones. People have always\n          done things that are detrimental to their health, like alcohol, drugs,\n          extreme sports etc. because they enjoy it more than they fear it.\n        </p>\n\n        <h3 style={{ margin: \"50px\", textAlign: \"left\" }}>\n          Louise Drulhe, Critical Atlas of Internet\n        </h3>\n        <p style={{ margin: \"50px\", textAlign: \"left\", fontSize: \"20px\" }}>\n          This was an interesting read. Though the font was slightly hard to\n          read, I did enjoy the stroked dotting of the “i” as well as the whole\n          viewing experience with the scrolling and images. Thinking about the\n          internet as a single point and how it connects the world gives me a\n          different perspective. The ability of the internet to connect everyone\n          globally is grand, but I can’t help but think about all the actual\n          physical architecture we have built to make it possible. Afterall, we\n          literally have gigantic cables running from here to halfway across the\n          world to connect everyone. In that sense, to me, the internet is not\n          just a single point, but a jumble of threads that everyone is\n          entangled in.\n        </p>\n\n        <h3 style={{ margin: \"50px\", textAlign: \"left\" }}>\n          Kate Crawford and Vladan Joler, Anatomy of an AI System\n        </h3>\n        <p style={{ margin: \"50px\", textAlign: \"left\", fontSize: \"20px\" }}>\n          It was nice delving into the “mind” of my Google Home. Training\n          systems with a flood of updated images and data makes you think about\n          all the possibilities in AI. One concept that stood out to me was the\n          idea that “media is not an extension of human senses-but rather an\n          extension of the Earth”. This is a perspective I am not used to.\n          Usually I read about AI and technology or Web 2.0 in relation to how\n          closely they can mimic the human mind. But now that I think about it,\n          the media indeed can be a natural process of Earth. Transfer of\n          information particles that change in structure through sound waves or\n          devices made from natural elements. This relates further convinces me\n          that AI is more than just training models with data, but a result of\n          labor, information and natural resources.\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Blogs;\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, withRouter } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Assignment1 from \"./components/assignments/assignment1\";\nimport Assignment3 from \"./components/assignments/assignment3\";\nimport ShuffleDeck from \"./components/assignments/assignment2/Assignment2\";\nimport Blogs from \"./components/blogs\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router basename=\"/\">\n          {/* <Navbar /> */}\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/blogs\" component={Blogs} />\n          <Route exact path=\"/assignment1\" component={Assignment1} />\n          <Route exact path=\"/assignment2\" component={ShuffleDeck} />\n          <Route exact path=\"/assignment3\" component={Assignment3} />\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}